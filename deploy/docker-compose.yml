version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: test:${TEST_VERSION:-latest}
    restart: always
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      TEST_HOST: 0.0.0.0
      TEST_DB_HOST: test-db
      TEST_DB_PORT: 3306
      TEST_DB_USER: test
      TEST_DB_PASS: test
      TEST_DB_BASE: test
      TESTKAFKA_KAFKA_BOOTSTRAP_SERVERS: '["test-kafka:9092"]'

  db:
    image: bitnami/mysql:8.0.30
    hostname: test-db
    restart: always
    environment:
      MYSQL_ROOT_USER: "test"
      MYSQL_ROOT_PASSWORD: "test"
      MYSQL_DATABASE: "test"
      MYSQL_AUTHENTICATION_PLUGIN: "mysql_native_password"
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 10s
      timeout: 5s
      retries: 40
    volumes:
    - test-db-data:/bitnami/mysql/data

  zookeeper:
    image: "bitnami/zookeeper:3.7.1"
    hostname: "test-zookeeper"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_LOG_LEVEL: "ERROR"
    healthcheck:
      test: zkServer.sh status
      interval: 1s
      timeout: 3s
      retries: 30

  kafka:
    image: "bitnami/kafka:3.2.0"
    hostname: "test-kafka"
    environment:
      KAFKA_BROKER_ID: "1"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://test-kafka:9092"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "test-zookeeper:2181"
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092
      interval: 1s
      timeout: 3s
      retries: 30
    depends_on:
      zookeeper:
        condition: service_healthy



volumes:
  test-db-data:
    name: test-db-data
